image: node:18

stages:
  - build_prod
  - deploy_prod

variables:
  VUE_APP_PATH: "/home/ubuntu/my-oee-app"  # Adjust the path based on your server's file structure

before_script:
  - echo 'export NVM_DIR="$HOME/.nvm"' >> ~/.bashrc
  - echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> ~/.bashrc
  - source ~/.bashrc  # For Bash
  - |
    if [ -s "$NVM_DIR/nvm.sh" ]; then
      \. "$NVM_DIR/nvm.sh"  # Load NVM
    fi
  - nvm install 18.17.1
  - nvm use 18.17.1  # Use Node version 18
  - node --version  # Verify node version
  - npm --version  # Verify npm version

build_prod:
  stage: build_prod
  script:
    - echo "Building production Vue.js app"
    - cd $VUE_APP_PATH  # Go to the Vue app directory
    - npm install --force  # Install dependencies
    - npm run build  # Build production files (dist/)
  artifacts:
    paths:
      - dist/  # Save the build artifacts for deployment

deploy_prod:
  stage: deploy_prod
  script:
    - echo "Deploying Vue.js app to production server"
    - cd $VUE_APP_PATH  # Go to the Vue app directory on the server
    - git pull origin main  # Optionally pull the latest code from Git
    - npm install --production  # Install production dependencies
    - pm2 stop oee-app || true  # Stop PM2 app if already running (does not fail if app is not running)
    - pm2 delete oee-app || true  # Delete any existing PM2 app with the name 'oee-app'
    - npx http-server ./dist -p 8080  # Serve the static files in 'dist' directory on port 8080
    - pm2 start "npx http-server ./dist -p 8080" --name "oee-app"  # Start the server using PM2
    - pm2 save  # Save PM2 process list for automatic startup